[{"/Users/ali/Desktop/projects/jamee-emamie/src/serviceWorkerRegistration.js":"1","/Users/ali/Desktop/projects/jamee-emamie/src/config/config.js":"2","/Users/ali/Desktop/projects/jamee-emamie/src/pages/Demo/Posts/Post.js":"3","/Users/ali/Desktop/projects/jamee-emamie/src/pages/Demo/Tasks/index.js":"4","/Users/ali/Desktop/projects/jamee-emamie/src/components/Forms/Company.js":"5","/Users/ali/Desktop/projects/jamee-emamie/src/pages/LandingPage/PageContent.js":"6","/Users/ali/Desktop/projects/jamee-emamie/src/App.js":"7","/Users/ali/Desktop/projects/jamee-emamie/src/config/index.js":"8","/Users/ali/Desktop/projects/jamee-emamie/src/pages/LandingPage/index.js":"9","/Users/ali/Desktop/projects/jamee-emamie/src/pages/Firebase/Storage.js":"10","/Users/ali/Desktop/projects/jamee-emamie/src/pages/Demo/Posts/Posts.js":"11","/Users/ali/Desktop/projects/jamee-emamie/src/pages/Dashboard/index.js":"12","/Users/ali/Desktop/projects/jamee-emamie/src/containers/Reports/Days.js":"13","/Users/ali/Desktop/projects/jamee-emamie/src/config/locales/ru.js":"14","/Users/ali/Desktop/projects/jamee-emamie/src/containers/Reports/Providers.js":"15","/Users/ali/Desktop/projects/jamee-emamie/src/config/locales/en.js":"16","/Users/ali/Desktop/projects/jamee-emamie/src/containers/Reports/Months.js":"17","/Users/ali/Desktop/projects/jamee-emamie/src/pages/Documentation/GettingStarted/index.js":"18","/Users/ali/Desktop/projects/jamee-emamie/src/config/locales/de.js":"19","/Users/ali/Desktop/projects/jamee-emamie/src/config/menuItems.js":"20","/Users/ali/Desktop/projects/jamee-emamie/src/components/Post/Post.js":"21","/Users/ali/Desktop/projects/jamee-emamie/src/components/Forms/Task.js":"22"},{"size":5532,"mtime":1610955620357,"results":"23","hashOfConfig":"24"},{"size":6169,"mtime":1610955620343,"results":"25","hashOfConfig":"24"},{"size":5728,"mtime":1610955620349,"results":"26","hashOfConfig":"24"},{"size":2129,"mtime":1610955620350,"results":"27","hashOfConfig":"24"},{"size":806,"mtime":1610955620342,"results":"28","hashOfConfig":"24"},{"size":7308,"mtime":1610955620354,"results":"29","hashOfConfig":"24"},{"size":214,"mtime":1610955620342,"results":"30","hashOfConfig":"24"},{"size":39,"mtime":1610955620344,"results":"31","hashOfConfig":"24"},{"size":7840,"mtime":1610955620354,"results":"32","hashOfConfig":"24"},{"size":4072,"mtime":1610955620353,"results":"33","hashOfConfig":"24"},{"size":1493,"mtime":1610955620350,"results":"34","hashOfConfig":"24"},{"size":3285,"mtime":1610955620348,"results":"35","hashOfConfig":"24"},{"size":2056,"mtime":1610955620346,"results":"36","hashOfConfig":"24"},{"size":709,"mtime":1610955620345,"results":"37","hashOfConfig":"24"},{"size":1829,"mtime":1610955620347,"results":"38","hashOfConfig":"24"},{"size":569,"mtime":1610955620344,"results":"39","hashOfConfig":"24"},{"size":2385,"mtime":1610955620346,"results":"40","hashOfConfig":"24"},{"size":500,"mtime":1610955620351,"results":"41","hashOfConfig":"24"},{"size":596,"mtime":1610955620344,"results":"42","hashOfConfig":"24"},{"size":10242,"mtime":1610955620345,"results":"43","hashOfConfig":"24"},{"size":5249,"mtime":1610955620343,"results":"44","hashOfConfig":"24"},{"size":2014,"mtime":1610955620342,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1625iyi",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ali/Desktop/projects/jamee-emamie/src/serviceWorkerRegistration.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/config/config.js",[],["94","95"],"/Users/ali/Desktop/projects/jamee-emamie/src/pages/Demo/Posts/Post.js",["96","97","98","99","100","101","102"],"import React, { useEffect, useState, useCallback } from 'react'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Publish from '@material-ui/icons/Publish'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport { useIntl } from 'react-intl'\r\nimport moment from 'moment'\r\nimport { useAuth } from 'base-shell/lib/providers/Auth'\r\nimport { useFirebase } from 'rmw-shell/lib/providers/Firebase'\r\nimport SimpleEditor from 'rmw-shell/lib/containers/PostEditor'\r\nimport { useQuestions } from 'material-ui-shell/lib/providers/Dialogs/Question'\r\n\r\nconst Post = () => {\r\n  const history = useHistory()\r\n  const { uid } = useParams()\r\n  const intl = useIntl()\r\n  const { auth } = useAuth()\r\n  const [changed, setChanged] = useState(false)\r\n  const [initialized, setInitialized] = useState(false)\r\n  const { firebaseApp } = useFirebase()\r\n  const [isPublishing, setPublishing] = useState(false)\r\n  const [isPublished, setIsPublished] = useState(false)\r\n  const [post, setPost] = useState(false)\r\n  const { openDialog } = useQuestions()\r\n\r\n  const loadPost = useCallback(async () => {\r\n    const postSnap = await firebaseApp\r\n      .database()\r\n      .ref(`user_posts/${auth.uid}/${uid}`)\r\n      .once('value')\r\n\r\n    if (postSnap.exists()) {\r\n      const s = moment(postSnap.child('start').val())\r\n      const e = moment(postSnap.child('end').val())\r\n      setPost({ ...postSnap.child('post').val() })\r\n      setIsPublished(!!postSnap.child('publishedOn').val())\r\n      setInitialized(true)\r\n    }\r\n  }, [auth.uid, firebaseApp, uid])\r\n\r\n  useEffect(() => {\r\n    if (uid) {\r\n      loadPost()\r\n    }\r\n  }, [loadPost])\r\n\r\n  const handlePublish = async () => {\r\n    setPublishing(true)\r\n\r\n    const postSnap = await firebaseApp\r\n      .database()\r\n      .ref(`user_posts/${auth.uid}/${uid}`)\r\n      .once('value')\r\n\r\n    const publishedOn = moment(undefined).valueOf()\r\n    const order = 0 - publishedOn\r\n\r\n    if (postSnap.exists()) {\r\n      await firebaseApp\r\n        .database()\r\n        .ref(`posts/${uid}`)\r\n        .update({ ...postSnap.val(), publishedOn, order })\r\n      await firebaseApp\r\n        .database()\r\n        .ref(`user_posts/${auth.uid}/${uid}`)\r\n        .update({ publishedOn, order })\r\n    }\r\n\r\n    setPublishing(false)\r\n    history.goBack()\r\n  }\r\n\r\n  const handleImageUpload = (file) => {\r\n    return new Promise((resolve) => {\r\n      try {\r\n        let img = new Image()\r\n        img.src = window.URL.createObjectURL(file)\r\n        img.onload = async () => {\r\n          const index = file.name.lastIndexOf('.')\r\n          const fileExtension = file.name.slice(index)\r\n          const path = `user_posts/${\r\n            auth.uid\r\n          }/${uid}/${Date.now()}${fileExtension}`\r\n          let snapshot = await firebaseApp.storage().ref(path).put(file)\r\n\r\n          const downloadURL = await snapshot.ref.getDownloadURL()\r\n          const contentType = snapshot.metadata.contentType || null\r\n\r\n          resolve({\r\n            downloadURL,\r\n            contentType,\r\n            width: img.width,\r\n            height: img.height,\r\n            path,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        resolve(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onStateChanged = (state) => {\r\n    setChanged(true)\r\n  }\r\n\r\n  const onDefferedStateChange = async (post) => {\r\n    await firebaseApp.database().ref(`posts/${uid}`).update({\r\n      post,\r\n    })\r\n\r\n    setChanged(false)\r\n  }\r\n\r\n  const handleDelete = async (handleClose) => {\r\n    if (uid) {\r\n      await firebaseApp.database().ref().child(`posts/${uid}`).remove()\r\n\r\n      handleClose()\r\n      history.goBack()\r\n    }\r\n  }\r\n\r\n  const openDeleteDialog = () => {\r\n    openDialog({\r\n      handleAction: handleDelete,\r\n      title: intl.formatMessage({\r\n        id: `delete_post_dialog_title`,\r\n        defaultMessage: 'Delete Post?',\r\n      }),\r\n      message: intl.formatMessage({\r\n        id: `delete_post_dialog_message`,\r\n        defaultMessage: 'Post will be deleted permanently?',\r\n      }),\r\n      action: intl.formatMessage({\r\n        id: `delete_post_dialog_action`,\r\n        defaultMessage: 'DELETE POST',\r\n      }),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      onBackClick={() => {\r\n        history.goBack()\r\n      }}\r\n      appBarContent={\r\n        <div>\r\n          <Tooltip title={intl.formatMessage({ id: 'publish' })}>\r\n            <IconButton\r\n              disabled={isPublishing}\r\n              onClick={handlePublish}\r\n              color=\"inherit\"\r\n            >\r\n              {isPublishing ? (\r\n                <CircularProgress\r\n                  color=\"secondary\"\r\n                  style={{ height: 20, width: 20 }}\r\n                />\r\n              ) : (\r\n                <Publish style={{ width: 25, height: 25 }} />\r\n              )}\r\n            </IconButton>\r\n          </Tooltip>\r\n          {uid && (\r\n            <Tooltip\r\n              title={intl.formatMessage({ id: 'delete' })}\r\n              onClick={() => {\r\n                openDeleteDialog()\r\n              }}\r\n            >\r\n              <IconButton disabled={isPublishing} color=\"inherit\">\r\n                <Delete />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n        </div>\r\n      }\r\n    >\r\n      <React.Fragment>\r\n        <SimpleEditor\r\n          handleImageUpload={handleImageUpload}\r\n          onStateChanged={onStateChanged}\r\n          //onDefferedStateChange={onDefferedStateChange}\r\n          initialState={post}\r\n        />\r\n      </React.Fragment>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Post\r\n",["103","104"],"/Users/ali/Desktop/projects/jamee-emamie/src/pages/Demo/Tasks/index.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/components/Forms/Company.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/pages/LandingPage/PageContent.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/App.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/config/index.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/pages/LandingPage/index.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/pages/Firebase/Storage.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/pages/Demo/Posts/Posts.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/pages/Dashboard/index.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/containers/Reports/Days.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/config/locales/ru.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/containers/Reports/Providers.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/config/locales/en.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/containers/Reports/Months.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/pages/Documentation/GettingStarted/index.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/config/locales/de.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/config/menuItems.js",[],["105","106"],"/Users/ali/Desktop/projects/jamee-emamie/src/components/Post/Post.js",[],"/Users/ali/Desktop/projects/jamee-emamie/src/components/Forms/Task.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":21,"column":10,"nodeType":"113","messageId":"114","endLine":21,"endColumn":17},{"ruleId":"111","severity":1,"message":"115","line":22,"column":10,"nodeType":"113","messageId":"114","endLine":22,"endColumn":21},{"ruleId":"111","severity":1,"message":"116","line":25,"column":10,"nodeType":"113","messageId":"114","endLine":25,"endColumn":21},{"ruleId":"111","severity":1,"message":"117","line":36,"column":13,"nodeType":"113","messageId":"114","endLine":36,"endColumn":14},{"ruleId":"111","severity":1,"message":"118","line":37,"column":13,"nodeType":"113","messageId":"114","endLine":37,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":48,"column":6,"nodeType":"121","endLine":48,"endColumn":16,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"123","line":110,"column":9,"nodeType":"113","messageId":"114","endLine":110,"endColumn":30},{"ruleId":"107","replacedBy":"124"},{"ruleId":"109","replacedBy":"125"},{"ruleId":"107","replacedBy":"126"},{"ruleId":"109","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'changed' is assigned a value but never used.","Identifier","unusedVar","'initialized' is assigned a value but never used.","'isPublished' is assigned a value but never used.","'s' is assigned a value but never used.","'e' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'onDefferedStateChange' is assigned a value but never used.",["128"],["129"],["128"],["129"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [loadPost, uid]",{"range":"133","text":"134"},[1838,1848],"[loadPost, uid]"]